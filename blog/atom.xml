<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>源小神写字的地方</title>
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://jiangyuan.me/"/>
  <updated>2016-09-24T15:03:47.000Z</updated>
  <id>http://jiangyuan.me/</id>
  
  <author>
    <name>源小神</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vs code 初上手</title>
    <link href="http://jiangyuan.me/2016/09/24/vscode/"/>
    <id>http://jiangyuan.me/2016/09/24/vscode/</id>
    <published>2016-09-24T14:59:22.000Z</published>
    <updated>2016-09-24T15:03:47.000Z</updated>
    
    <content type="html">&lt;p&gt;这是《小江品评编辑器》系列的开篇，当然想开个好头。&lt;br&gt;我 2012 年开始接触前端，从最开始的记事本，到 &lt;code&gt;Dreamweaver&lt;/code&gt; ，到 &lt;code&gt;notepad++&lt;/code&gt; ，到风头一时无两的 &lt;code&gt;Sublime Text&lt;/code&gt; ，到现在社区庞大的 &lt;code&gt;Atom&lt;/code&gt;，都使用过很长一段时间。&lt;br&gt;期间也抽空玩耍过 &lt;code&gt;Vim&lt;/code&gt;、&lt;code&gt;Emac&lt;/code&gt;和 &lt;code&gt;Brackets&lt;/code&gt; 等等，觉得智商不够浅尝辄止。&lt;br&gt;当然也不会放过 &lt;code&gt;IDE&lt;/code&gt; ，&lt;code&gt;Eclispe&lt;/code&gt;、&lt;code&gt;NetBeans&lt;/code&gt; 、&lt;code&gt;Aptana&lt;/code&gt; 都试过，现在专注 &lt;code&gt;jetbrains&lt;/code&gt; 三十年、&lt;code&gt;Webstorm&lt;/code&gt; 脑残粉……别胡思乱想了，我买了 &lt;code&gt;license&lt;/code&gt;。&lt;br&gt;扯这么多就是为了证明，&lt;strong&gt;品评编辑器&lt;/strong&gt;，我还真有这个资格。&lt;br&gt;今天要说的编辑器不是 &lt;code&gt;Sublime&lt;/code&gt; ，她很棒，但更新太缓慢，在这个各种技术井喷的时代，再不奋起直追，只会被淘汰。&lt;br&gt;也不是 &lt;code&gt;Atom&lt;/code&gt; ，他一样棒，意外的是启动时间要一个世纪。&lt;br&gt;&lt;code&gt;Webstorm&lt;/code&gt; 当然是压轴登场。&lt;br&gt;今天聊聊 &lt;code&gt;VS Code&lt;/code&gt; ，上镇楼图！&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;img src=&quot;/blog/2016/09/24/vscode/1.png&quot; alt=&quot;1.png&quot; title=&quot;&quot;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://code.visualstudio.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;插件&lt;/a&gt;，当然，&lt;code&gt;code&lt;/code&gt; 内置的插件管理是所有编辑器里面最好用的（上图的图标那一列就我安装的插件），几乎不会访问这个站点&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/vscode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我从 &lt;code&gt;0.x.x&lt;/code&gt; 时代就开始关注，除了 &lt;code&gt;autocomplete&lt;/code&gt; 和 &lt;code&gt;node debug&lt;/code&gt; 的噱头，连代码折叠的功能都没有。到现在，当前版本 &lt;code&gt;1.5.3&lt;/code&gt; ，终于有了些王者的样子，你值得拥有。&lt;/p&gt;
&lt;h2 id=&quot;语言&quot;&gt;&lt;a href=&quot;#语言&quot; class=&quot;headerlink&quot; title=&quot;语言&quot;&gt;&lt;/a&gt;语言&lt;/h2&gt;&lt;p&gt;这里说的不是 &lt;code&gt;js&lt;/code&gt; 啊 &lt;code&gt;css&lt;/code&gt; 这种语言，而是 &lt;code&gt;Chinese&lt;/code&gt; &lt;code&gt;Eglish&lt;/code&gt; 这种语言。很难相信你安装完成后，菜单栏、状态栏等等你能看到的一切全都是中文！&lt;br&gt;当然你可以说这是第一个官方完整支持中文的编辑器，但我还是劝你&lt;strong&gt;使用英文版本&lt;/strong&gt;，否则你会像下面一样尴尬。&lt;/p&gt;
&lt;img src=&quot;/blog/2016/09/24/vscode/2.png&quot; alt=&quot;2.png&quot; title=&quot;&quot;&gt;
&lt;img src=&quot;/blog/2016/09/24/vscode/3.png&quot; alt=&quot;3.png&quot; title=&quot;&quot;&gt;
&lt;h2 id=&quot;终端&quot;&gt;&lt;a href=&quot;#终端&quot; class=&quot;headerlink&quot; title=&quot;终端&quot;&gt;&lt;/a&gt;终端&lt;/h2&gt;&lt;p&gt;应该是 &lt;code&gt;1.4.0&lt;/code&gt; 加的特性，就是这个特性甩了 &lt;code&gt;Atom&lt;/code&gt; &lt;code&gt;Sublime&lt;/code&gt; 等几条街，和前端开发之神 &lt;code&gt;Webstorm&lt;/code&gt; 打成平手，这份荣耀，前无古人。&lt;/p&gt;
&lt;img src=&quot;/blog/2016/09/24/vscode/4.gif&quot; alt=&quot;4.gif&quot; title=&quot;&quot;&gt;
&lt;h2 id=&quot;代码提示&quot;&gt;&lt;a href=&quot;#代码提示&quot; class=&quot;headerlink&quot; title=&quot;代码提示&quot;&gt;&lt;/a&gt;代码提示&lt;/h2&gt;&lt;p&gt;代码提示，&lt;code&gt;Visual Studio&lt;/code&gt; 敢说第二，没人敢说第一。&lt;br&gt;&lt;code&gt;VS Code&lt;/code&gt; 传承了这个特点，其体验甚至超过了 &lt;code&gt;Webstorm&lt;/code&gt; ！颤抖吧！&lt;/p&gt;
&lt;img src=&quot;/blog/2016/09/24/vscode/5.gif&quot; alt=&quot;5.gif&quot; title=&quot;&quot;&gt;
&lt;p&gt;注意两点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://code.visualstudio.com/docs/languages/jsconfig&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jsconfig.json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/typings/typings&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;typings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;node-debug&quot;&gt;&lt;a href=&quot;#node-debug&quot; class=&quot;headerlink&quot; title=&quot;node debug&quot;&gt;&lt;/a&gt;node debug&lt;/h2&gt;&lt;p&gt;体验没有 &lt;code&gt;Webstorm&lt;/code&gt; 好，但足以秒杀其他编辑器！&lt;/p&gt;
&lt;img src=&quot;/blog/2016/09/24/vscode/6.png&quot; alt=&quot;6.png&quot; title=&quot;&quot;&gt;
&lt;h2 id=&quot;插件&quot;&gt;&lt;a href=&quot;#插件&quot; class=&quot;headerlink&quot; title=&quot;插件&quot;&gt;&lt;/a&gt;插件&lt;/h2&gt;&lt;p&gt;无脑安装，无须像 &lt;code&gt;Sublime&lt;/code&gt; 一样折腾。&lt;br&gt;当然，必须要贴下我安装的自己。&lt;/p&gt;
&lt;img src=&quot;/blog/2016/09/24/vscode/7.png&quot; alt=&quot;7.png&quot; title=&quot;&quot;&gt;
&lt;img src=&quot;/blog/2016/09/24/vscode/8.png&quot; alt=&quot;8.png&quot; title=&quot;&quot;&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这是《小江品评编辑器》系列的开篇，当然想开个好头。&lt;br&gt;我 2012 年开始接触前端，从最开始的记事本，到 &lt;code&gt;Dreamweaver&lt;/code&gt; ，到 &lt;code&gt;notepad++&lt;/code&gt; ，到风头一时无两的 &lt;code&gt;Sublime Text&lt;/code&gt; ，到现在社区庞大的 &lt;code&gt;Atom&lt;/code&gt;，都使用过很长一段时间。&lt;br&gt;期间也抽空玩耍过 &lt;code&gt;Vim&lt;/code&gt;、&lt;code&gt;Emac&lt;/code&gt;和 &lt;code&gt;Brackets&lt;/code&gt; 等等，觉得智商不够浅尝辄止。&lt;br&gt;当然也不会放过 &lt;code&gt;IDE&lt;/code&gt; ，&lt;code&gt;Eclispe&lt;/code&gt;、&lt;code&gt;NetBeans&lt;/code&gt; 、&lt;code&gt;Aptana&lt;/code&gt; 都试过，现在专注 &lt;code&gt;jetbrains&lt;/code&gt; 三十年、&lt;code&gt;Webstorm&lt;/code&gt; 脑残粉……别胡思乱想了，我买了 &lt;code&gt;license&lt;/code&gt;。&lt;br&gt;扯这么多就是为了证明，&lt;strong&gt;品评编辑器&lt;/strong&gt;，我还真有这个资格。&lt;br&gt;今天要说的编辑器不是 &lt;code&gt;Sublime&lt;/code&gt; ，她很棒，但更新太缓慢，在这个各种技术井喷的时代，再不奋起直追，只会被淘汰。&lt;br&gt;也不是 &lt;code&gt;Atom&lt;/code&gt; ，他一样棒，意外的是启动时间要一个世纪。&lt;br&gt;&lt;code&gt;Webstorm&lt;/code&gt; 当然是压轴登场。&lt;br&gt;今天聊聊 &lt;code&gt;VS Code&lt;/code&gt; ，上镇楼图！&lt;/p&gt;
    
    </summary>
    
    
      <category term="vscode" scheme="http://jiangyuan.me/tags/vscode/"/>
    
      <category term="编辑器" scheme="http://jiangyuan.me/tags/%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>babel</title>
    <link href="http://jiangyuan.me/2016/08/13/babel/"/>
    <id>http://jiangyuan.me/2016/08/13/babel/</id>
    <published>2016-08-13T08:19:54.000Z</published>
    <updated>2016-08-13T08:19:50.000Z</updated>
    
    <content type="html">&lt;p&gt;最近总算有点时间能系统的梳理下 &lt;code&gt;babel&lt;/code&gt; 。入门或者使用手册什么的直接查看“&lt;a href=&quot;#wafaha&quot;&gt;参考文章&lt;/a&gt;”即可，我只说说我的理解。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;插件&quot;&gt;&lt;a href=&quot;#插件&quot; class=&quot;headerlink&quot; title=&quot;插件&quot;&gt;&lt;/a&gt;插件&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Babel is built out of plugins.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;babel-core&lt;/code&gt; 只是个插件加载器，&lt;code&gt;presets&lt;/code&gt; 是一组插件，避免繁琐地一个一个安装插件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;preset&lt;/code&gt;&lt;a href=&quot;http://babeljs.io/docs/plugins/preset-es2015/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;es2015&lt;/a&gt; 可以很好的编译 &lt;code&gt;es6&lt;/code&gt; ，唯独对常用的 &lt;code&gt;class property&lt;/code&gt; 无能为力，快使用插件 &lt;a href=&quot;http://babeljs.io/docs/plugins/transform-class-properties/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Class properties transform&lt;/a&gt; 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;preset&lt;/code&gt; &lt;a href=&quot;http://babeljs.io/docs/plugins/preset-react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react&lt;/a&gt; 也是官方支撑的，有五个插件，其中 &lt;a href=&quot;https://flowtype.org/docs/quick-reference.html#_&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;flow&lt;/a&gt; 是我下一篇文章的内容。传闻 React 团队抛弃了自己做的编译工具全力支持 &lt;code&gt;babel&lt;/code&gt; ，&lt;code&gt;eslint&lt;/code&gt; 的 &lt;code&gt;parser&lt;/code&gt; 主流也是 &lt;code&gt;babel&lt;/code&gt;，不知道 &lt;code&gt;typescript&lt;/code&gt; 是啥态度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;preset&lt;/code&gt; &lt;a href=&quot;http://babeljs.io/docs/plugins/preset-stage-0/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stage-0&lt;/a&gt;  其实包含了 stage-[1-3] ，也就是说你装了 &lt;code&gt;0&lt;/code&gt; ，其他三个默认就装了，别重复堆叠暴露底细。另外，[0-3] 是代表了不同阶段，但， &lt;code&gt;0&lt;/code&gt; 是代表刚开始讨论，而 &lt;code&gt;3&lt;/code&gt; 是代表快要成为标准规范了，切忌搞混，又暴露底细，虽然我也不知道 &lt;code&gt;async/wait&lt;/code&gt; 处在哪个阶段。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自定义 &lt;code&gt;preset&lt;/code&gt; 请参考&lt;a href=&quot;https://github.com/babel/babel/blob/master/packages/babel-preset-es2015/src/index.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;范本&lt;/a&gt;，其实很简单，但也别胡乱搞 &lt;code&gt;preset&lt;/code&gt; ，生态圈的质量取决于开发者的质量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自定义 &lt;code&gt;plugin&lt;/code&gt; 可以参考……没的参考，看样子你是个求知欲很强的人，看看这个，《&lt;a href=&quot;https://github.com/thejameskyle/babel-handbook/blob/master/translations/zh-Hans/plugin-handbook.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Babel 插件手册&lt;/a&gt;》，这是另一个世界，里面有抽象语法树、词法分析、语法分析等高阶词汇，装 ◻︎ 撩 ◻︎ 必备。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;sourceMaps ，单独说说 &lt;code&gt;sourcemap&lt;/code&gt; ，有两个坑。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一直很好奇，&lt;code&gt;babel&lt;/code&gt; 和 &lt;code&gt;ugilfy&lt;/code&gt; 两个 &lt;code&gt;sourcemap&lt;/code&gt; 打架，到底怎么处理？可以读读这个 &lt;a href=&quot;https://github.com/mishoo/UglifyJS2#composed-source-map&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Composed source map&lt;/a&gt; 。&lt;/li&gt;
&lt;li&gt;坑！用 &lt;code&gt;babel-cli&lt;/code&gt; 的话，配置 &lt;code&gt;.babelrc&lt;/code&gt; 里面的 &lt;code&gt;sourceMaps&lt;/code&gt; 不会生成 &lt;code&gt;map&lt;/code&gt; 文件，你必须在命令行里指定 &lt;code&gt;--source-map&lt;/code&gt; ，因为写 &lt;code&gt;sourceMap&lt;/code&gt; 的操作是在 &lt;code&gt;babel-cli&lt;/code&gt; 里实现的，虽然生成 &lt;code&gt;sourceMap&lt;/code&gt; 是在 &lt;code&gt;babel-core&lt;/code&gt; 里。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;moduleXXX，比如 &lt;code&gt;moduleRoot&lt;/code&gt; 等，这一系列参数要配合 &lt;a href=&quot;https://babeljs.io/docs/plugins/transform-es2015-modules-amd/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;transform-es2015-modules-amd&lt;/a&gt; 。当然，实际项目中类似的事情可以交给其他工具去做，&lt;code&gt;babel&lt;/code&gt; 就保持单纯的 &lt;code&gt;parser&lt;/code&gt; 作用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;filename ，就是要编译文件的路径，说这个目的是源于 &lt;a href=&quot;https://github.com/fex-team/fis-parser-babel-5.x&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fis-parser-babel-5.x&lt;/a&gt; 。它是以这种 &lt;code&gt;/xx/xx/xx.js&lt;/code&gt; 绝对路径作为 &lt;code&gt;filename&lt;/code&gt; 传到 &lt;code&gt;babel&lt;/code&gt; 里，结果 &lt;code&gt;babel&lt;/code&gt; 找不到 &lt;code&gt;.babelrc&lt;/code&gt; 。&lt;code&gt;babel&lt;/code&gt; 是沿着目录往上查找 &lt;code&gt;.babelrc&lt;/code&gt; ，直到根目录，这种形式最后的结果是 &lt;code&gt;/.babelrc&lt;/code&gt; ，it’s not a  file ….&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;quiet ，不打印任何东西。这个设计很费解，默认是打印东西，但只有错误信息，编译流程的关键节点一个没有，&lt;code&gt;log&lt;/code&gt; 系统真的很弱。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;生成的代码&quot;&gt;&lt;a href=&quot;#生成的代码&quot; class=&quot;headerlink&quot; title=&quot;生成的代码&quot;&gt;&lt;/a&gt;生成的代码&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/thejameskyle/babel-handbook/blob/master/translations/zh-Hans/user-handbook.md#toc-babel-polyfill&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;babel-polyfill&lt;/a&gt;，就是个库，自己去看就好了。&lt;/li&gt;
&lt;li&gt;一直担心的是几乎每个文件里面都有 &lt;code&gt;Class&lt;/code&gt; 的语法糖，代码严重冗余！我担心的别人当然也会担心，看看这个 &lt;a href=&quot;https://babeljs.io/docs/plugins/transform-runtime/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;babel-runtime&lt;/a&gt; 。虽说有官方的方案，但这块还是值得挖掘，是个微创新的点。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;fis&quot;&gt;&lt;a href=&quot;#fis&quot; class=&quot;headerlink&quot; title=&quot;fis&quot;&gt;&lt;/a&gt;fis&lt;/h2&gt;&lt;p&gt;&lt;code&gt;fis&lt;/code&gt; 生态圈也是江河日下，&lt;code&gt;babel&lt;/code&gt; 的问题都不能妥善解决。&lt;br&gt;建议使用这个包 &lt;a href=&quot;https://www.npmjs.com/package/fis3-parser-babel-imweb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;parser-imweb&lt;/a&gt; ，将这个包和 &lt;code&gt;babel&lt;/code&gt; 相关的包都装在本地吧，否则会掉到坑里。&lt;br&gt;也许是时候换到 &lt;code&gt;webpack&lt;/code&gt; ？&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h2 id=&quot;wafaha&quot;&gt;参考文章&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2016/01/babel.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Babel 入门教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/thejameskyle/babel-handbook/blob/master/translations/zh-Hans/user-handbook.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Babel 用户手册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://babeljs.io/docs/plugins/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Plugins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近总算有点时间能系统的梳理下 &lt;code&gt;babel&lt;/code&gt; 。入门或者使用手册什么的直接查看“&lt;a href=&quot;#wafaha&quot;&gt;参考文章&lt;/a&gt;”即可，我只说说我的理解。&lt;/p&gt;
    
    </summary>
    
    
      <category term="babel" scheme="http://jiangyuan.me/tags/babel/"/>
    
      <category term="es6" scheme="http://jiangyuan.me/tags/es6/"/>
    
      <category term="fis" scheme="http://jiangyuan.me/tags/fis/"/>
    
  </entry>
  
  <entry>
    <title>bash 的条件和循环</title>
    <link href="http://jiangyuan.me/2016/06/28/bash-for-and-condition/"/>
    <id>http://jiangyuan.me/2016/06/28/bash-for-and-condition/</id>
    <published>2016-06-28T07:15:54.000Z</published>
    <updated>2016-06-28T14:42:30.000Z</updated>
    
    <content type="html">&lt;p&gt;条件语句和循环可以统称为流程控制，是一门语言最基础的部分。&lt;br&gt;&lt;code&gt;bash&lt;/code&gt; 的流程控制和大家熟悉的语言非常类似，所以这块上手应该很快。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;条件语句&quot;&gt;&lt;a href=&quot;#条件语句&quot; class=&quot;headerlink&quot; title=&quot;条件语句&quot;&gt;&lt;/a&gt;条件语句&lt;/h2&gt;&lt;p&gt;条件这块建议先去瞧瞧《&lt;a href=&quot;http://jiangyuan.me/blog/2016/05/30/bash-test/&quot;&gt;bash 的 Test&lt;/a&gt;》。&lt;code&gt;bash&lt;/code&gt; 中的条件语句，基础就是 &lt;code&gt;Test&lt;/code&gt; 。&lt;/p&gt;
&lt;h3 id=&quot;if&quot;&gt;&lt;a href=&quot;#if&quot; class=&quot;headerlink&quot; title=&quot;if&quot;&gt;&lt;/a&gt;if&lt;/h3&gt;&lt;p&gt;先来个实例：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;x=&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ &lt;span class=&quot;variable&quot;&gt;$x&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;x equals 5.&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;x does not equal 5&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 输出： x equals 5.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;和我们熟悉的语言非常相似，不妨抽象一下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; commands; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	commands&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; commands; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	commands...]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	commands]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这就是 &lt;code&gt;if&lt;/code&gt; 的基本语法，其中紧接在 &lt;code&gt;if&lt;/code&gt; 和 &lt;code&gt;elif&lt;/code&gt; 后面的 &lt;code&gt;commands&lt;/code&gt; 多数时候为 &lt;code&gt;Test&lt;/code&gt;  。&lt;br&gt;来个复杂一点的例子：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;FILE=~/.zshrc &lt;span class=&quot;comment&quot;&gt;# 随便找个路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ &lt;span class=&quot;operator&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$FILE&lt;/span&gt;&quot;&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# -e 单目操作符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$FILE&lt;/span&gt;&quot;&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$FILE&lt;/span&gt; is a regular file.&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$FILE&lt;/span&gt;&quot;&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$FILE&lt;/span&gt; is a directory.&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ -r &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$FILE&lt;/span&gt;&quot;&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$FILE&lt;/span&gt; is readable.&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ -w &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$FILE&lt;/span&gt;&quot;&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$FILE&lt;/span&gt; is writable.&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ -x &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$FILE&lt;/span&gt;&quot;&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$FILE&lt;/span&gt; is executable/searchable.&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$FILE&lt;/span&gt; does not exist&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个例子中就有大量的 &lt;code&gt;Test&lt;/code&gt; 。&lt;/p&gt;
&lt;h3 id=&quot;case&quot;&gt;&lt;a href=&quot;#case&quot; class=&quot;headerlink&quot; title=&quot;case&quot;&gt;&lt;/a&gt;case&lt;/h3&gt;&lt;p&gt;&lt;code&gt;case&lt;/code&gt; 其实就是我们熟悉的那个 &lt;code&gt;swich&lt;/code&gt; ，但语法形式上有很大的不同。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$variable&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$condition1&lt;/span&gt;&quot;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		command...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$condition2&lt;/span&gt;&quot;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		command...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;esac&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;双引号包裹变量，这不是必须的&lt;/li&gt;
&lt;li&gt;每一个 &lt;code&gt;Test&lt;/code&gt; 语句，必须以 &lt;code&gt;)&lt;/code&gt; 结尾&lt;/li&gt;
&lt;li&gt;每一个条件区块，必须以 &lt;code&gt;;;&lt;/code&gt; 结尾&lt;/li&gt;
&lt;li&gt;整个 &lt;code&gt;case&lt;/code&gt; 区块，必须以 &lt;code&gt;esac&lt;/code&gt; 结尾——&lt;code&gt;esac case spelled backwards&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来个例子。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;x=&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$x&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;x 是 a&quot;&lt;/span&gt;;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;x 是 4&quot;&lt;/span&gt;;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;x 是 b&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;esac&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# x 是 4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;总得来说， &lt;code&gt;bash&lt;/code&gt; 中的条件语句， &lt;code&gt;Test&lt;/code&gt; 是核心，&lt;code&gt;if&lt;/code&gt; 和 &lt;code&gt;case&lt;/code&gt; 熟悉语法即可。&lt;/p&gt;
&lt;h2 id=&quot;循环&quot;&gt;&lt;a href=&quot;#循环&quot; class=&quot;headerlink&quot; title=&quot;循环&quot;&gt;&lt;/a&gt;循环&lt;/h2&gt;&lt;p&gt;&lt;code&gt;bash&lt;/code&gt; 中有 &lt;code&gt;for&lt;/code&gt; 和 &lt;code&gt;while&lt;/code&gt; 两种常见的循环体，我们应该都很熟悉。&lt;/p&gt;
&lt;h3 id=&quot;for&quot;&gt;&lt;a href=&quot;#for&quot; class=&quot;headerlink&quot; title=&quot;for&quot;&gt;&lt;/a&gt;for&lt;/h3&gt;&lt;p&gt;直接上实例，批量修改文件名。&lt;/p&gt;
&lt;p&gt;目录如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.&amp;#10;&amp;#9500;&amp;#9472;&amp;#9472; error_400.html&amp;#10;&amp;#9500;&amp;#9472;&amp;#9472; error_403.html&amp;#10;&amp;#9500;&amp;#9472;&amp;#9472; error_404.html&amp;#10;&amp;#9500;&amp;#9472;&amp;#9472; error_500.html&amp;#10;&amp;#9492;&amp;#9472;&amp;#9472; error_503.html&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt; bash 代码：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; `ls`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	mv &lt;span class=&quot;variable&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;i/html/ejs&amp;#125;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;语法其实很明朗：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; variable [&lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; words]; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    commands&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;do&lt;/code&gt; 可以另起一行，如果和 &lt;code&gt;for&lt;/code&gt; 同行，那么 &lt;code&gt;for&lt;/code&gt; 语句必须 &lt;code&gt;;&lt;/code&gt; 结尾&lt;/li&gt;
&lt;li&gt;循环体必须 &lt;code&gt;done&lt;/code&gt; 结尾&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[in words]&lt;/code&gt; 取值很宽泛，可以是通配符，可以是一个命令(&lt;code&gt;ls&lt;/code&gt;)，一句话，必须是数组形式&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$i&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## 会打印当前目录下的所有文件名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;while&quot;&gt;&lt;a href=&quot;#while&quot; class=&quot;headerlink&quot; title=&quot;while&quot;&gt;&lt;/a&gt;while&lt;/h3&gt;&lt;p&gt;看个例子：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;count=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; [ &lt;span class=&quot;variable&quot;&gt;$count&lt;/span&gt; -le &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$count&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    count=$((count + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Finished.&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 依次打印 1 - 5 和 finished&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;语法如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; commands; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; commands; &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考文章&quot;&gt;&lt;a href=&quot;#参考文章&quot; class=&quot;headerlink&quot; title=&quot;参考文章&quot;&gt;&lt;/a&gt;参考文章&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.jikexueyuan.com/project/linux-command/chap28.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://wiki.jikexueyuan.com/project/linux-command/chap28.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tldp.org/LDP/abs/html/testbranch.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://tldp.org/LDP/abs/html/testbranch.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.jikexueyuan.com/project/linux-command/chap30.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://wiki.jikexueyuan.com/project/linux-command/chap30.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;条件语句和循环可以统称为流程控制，是一门语言最基础的部分。&lt;br&gt;&lt;code&gt;bash&lt;/code&gt; 的流程控制和大家熟悉的语言非常类似，所以这块上手应该很快。&lt;/p&gt;
    
    </summary>
    
    
      <category term="bash" scheme="http://jiangyuan.me/tags/bash/"/>
    
      <category term="mac" scheme="http://jiangyuan.me/tags/mac/"/>
    
      <category term="shell" scheme="http://jiangyuan.me/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>bash 的 Test</title>
    <link href="http://jiangyuan.me/2016/05/30/bash-test/"/>
    <id>http://jiangyuan.me/2016/05/30/bash-test/</id>
    <published>2016-05-30T13:38:54.000Z</published>
    <updated>2016-05-30T13:37:32.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;bash&lt;/code&gt; 中的 &lt;code&gt;test&lt;/code&gt; 确实是一个让初学者迷糊的概念，但是理解了之后，发现它并没有深奥的地方。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;实际场景&quot;&gt;&lt;a href=&quot;#实际场景&quot; class=&quot;headerlink&quot; title=&quot;实际场景&quot;&gt;&lt;/a&gt;实际场景&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; NVM_DIR=&lt;span class=&quot;string&quot;&gt;&quot;/Users/jero/.nvm&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$NVM_DIR&lt;/span&gt;/nvm.sh&quot;&lt;/span&gt; ] &amp;amp;&amp;amp; . &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$NVM_DIR&lt;/span&gt;/nvm.sh&quot;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# This loads nvm&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面是我 &lt;code&gt;~/.zshrc&lt;/code&gt; 文件中的一段，作用是引入 &lt;code&gt;nvm&lt;/code&gt; 脚本。其中中括号的内容就是一个&lt;strong&gt;测试&lt;/strong&gt;。&lt;br&gt;再看一段：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(uname)&lt;/span&gt;&quot;&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&#39;Darwin&#39;&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  OS=&lt;span class=&quot;string&quot;&gt;&#39;Mac&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; [ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(expr substr $(uname -s)&lt;/span&gt; 1 5)&quot;&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&#39;Linux&#39;&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  OS=&lt;span class=&quot;string&quot;&gt;&#39;Linux&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Your platform (&lt;span class=&quot;variable&quot;&gt;$(uname -a)&lt;/span&gt;) is not supported.&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果使用过 &lt;code&gt;Atom&lt;/code&gt; 编辑器，那么会知道这是 &lt;code&gt;/usr/local/bin/atom&lt;/code&gt; 中的一段脚本，作用是判断你都机器是哪种系统。其中 &lt;code&gt;if&lt;/code&gt; 后面中括号的内容，就是测试。&lt;/p&gt;
&lt;p&gt;从上面大致可以看出，测试就是其他语言中很常见的&lt;strong&gt;真假&lt;/strong&gt;判断。实际上， &lt;code&gt;[&lt;/code&gt; 是一个内置命令，你可以 &lt;code&gt;man [&lt;/code&gt; 查看使用说明。&lt;/p&gt;
&lt;h2 id=&quot;test-和&quot;&gt;&lt;a href=&quot;#test-和&quot; class=&quot;headerlink&quot; title=&quot;test 和 [&quot;&gt;&lt;/a&gt;test 和 [&lt;/h2&gt;&lt;p&gt;&lt;code&gt;[&lt;/code&gt; 命令根据表达式 &lt;code&gt;expr&lt;/code&gt; 求值的结果返回 &lt;strong&gt;0（真）或 1 （假）&lt;/strong&gt;。注意返回的结果，写多了 &lt;code&gt;js&lt;/code&gt; 的人通常会在这里跑坑里去。&lt;br&gt;&lt;code&gt;expr&lt;/code&gt; 也是一个 &lt;code&gt;bash&lt;/code&gt; 命令，你可以 &lt;code&gt;man expr&lt;/code&gt; 来查看使用手册。简单的讲，这个命令执行表达式，并将结果写到标准输出。&lt;br&gt;&lt;code&gt;[ expr ]&lt;/code&gt; 和 &lt;code&gt;test expr&lt;/code&gt; 是等价的。&lt;br&gt;我们来几个实例：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-gt&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; True || &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; False &lt;span class=&quot;comment&quot;&gt;# False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-gt&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; ] &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; True || &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; False &lt;span class=&quot;comment&quot;&gt;# False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ &lt;span class=&quot;string&quot;&gt;&#39;abc&#39;&lt;/span&gt; != &lt;span class=&quot;string&quot;&gt;&#39;def&#39;&lt;/span&gt; ]; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; $? &lt;span class=&quot;comment&quot;&gt;# 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$?&lt;/code&gt; 是上条命令的结果，不清楚的可以参见&lt;a href=&quot;http://jiangyuan.me/blog/2016/01/27/bash-variables-and-parameters/&quot;&gt;这篇文章&lt;/a&gt;。&lt;br&gt;&lt;code&gt;-gt&lt;/code&gt; 是比较操作符，表示大于。数值比较的相关操作，总结如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;操作符&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;-gt&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;大于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;-ge&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;大于等于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;-eq&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;等于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;-ne&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;不等于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;-lt&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;小于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;-le&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;小于等于&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;来看个例子：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[ &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-gt&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; ]; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; $?; &lt;span class=&quot;comment&quot;&gt;# 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &amp;gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; ]; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; $?; &lt;span class=&quot;comment&quot;&gt;# 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个当然是假的，但是用 &lt;code&gt;&amp;gt;&lt;/code&gt; 比较返回了 &lt;code&gt;0&lt;/code&gt; ，再看一组对比：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[ 3 &amp;#62; 4 ]; echo $?; # 0&amp;#10;[[ 3 &amp;#62; 4 ]]; echo $?; # 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[[&lt;/code&gt; 的结果符合我们的预期，事实证明 &lt;code&gt;&amp;amp;&amp;amp;, ||, &amp;gt;, &amp;lt;&lt;/code&gt; 在 &lt;code&gt;[]&lt;/code&gt; 中有些问题，这也是为什么有 &lt;code&gt;[[&lt;/code&gt; 的原因。&lt;/p&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;[[&quot;&gt;&lt;/a&gt;&lt;code&gt;[[&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;[[&lt;/code&gt; 是关键字，而不是一个命令，它的操作更接近 C 系语言的风格。 &lt;code&gt;[[&lt;/code&gt; 的用法和 &lt;code&gt;[&lt;/code&gt; 差不多，来几组例子：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[[ (&lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;&quot;&lt;/span&gt;) &amp;amp;&amp;amp; ( -w &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;&quot;&lt;/span&gt;) ]]; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; $?; &lt;span class=&quot;comment&quot;&gt;#0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ (&lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;&quot;&lt;/span&gt;) &amp;amp;&amp;amp; ( -w &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;&quot;&lt;/span&gt;) ]] &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;home is a writable directory&#39;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# home is a writable directory&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;string&quot;&gt;&quot;abc def .d,x--&quot;&lt;/span&gt; == a[abc]*\ ?d* ]]; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; $? &lt;span class=&quot;comment&quot;&gt;#0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;string&quot;&gt;&quot;abc def c&quot;&lt;/span&gt; == a[abc]*\ ?d* ]]; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; $? &lt;span class=&quot;comment&quot;&gt;#1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的几个例子有字符串的匹配，有单目操作符的比较，比如 &lt;code&gt;-d&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;常见的单目操作符&quot;&gt;&lt;a href=&quot;#常见的单目操作符&quot; class=&quot;headerlink&quot; title=&quot;常见的单目操作符&quot;&gt;&lt;/a&gt;常见的单目操作符&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;操作符&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;意义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;-z&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;测试 null 字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;-n&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;字符串是否非空&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;-d&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;-e&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;存在&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;-f&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;普通文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;-r&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;可读&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;-w&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;可写&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;-N&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;从上次读取之后做过修改&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;除了 &lt;code&gt;-z&lt;/code&gt; 和 &lt;code&gt;-n&lt;/code&gt; ，其他都是和文件相关的操作。&lt;/p&gt;
&lt;h2 id=&quot;-1&quot;&gt;&lt;a href=&quot;#-1&quot; class=&quot;headerlink&quot; title=&quot;(())&quot;&gt;&lt;/a&gt;&lt;code&gt;(())&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;这其实是一个相当强大的结构(structrue)，这里主要说说和测试相关的特性。&lt;br&gt;看组例子：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(( &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; )); &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; $? &lt;span class=&quot;comment&quot;&gt;#0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(( &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &amp;gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; )); &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; $? &lt;span class=&quot;comment&quot;&gt;#0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(( &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; )); &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; $? &lt;span class=&quot;comment&quot;&gt;#0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(( &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; )); &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; $? &lt;span class=&quot;comment&quot;&gt;#1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(( &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt; )); &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; $? &lt;span class=&quot;comment&quot;&gt;#1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;双括号结构一般都是用在数值的计算上，起返回的结果取决于计算的结果，结果为 0，返回 1（假）；结果为非 0，返回 0（真）。&lt;/p&gt;
&lt;h2 id=&quot;参考文章&quot;&gt;&lt;a href=&quot;#参考文章&quot; class=&quot;headerlink&quot; title=&quot;参考文章&quot;&gt;&lt;/a&gt;参考文章&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/cn/linux/l-bash-test.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.ibm.com/developerworks/cn/linux/l-bash-test.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tldp.org/LDP/abs/html/testconstructs.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://tldp.org/LDP/abs/html/testconstructs.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tldp.org/LDP/abs/html/dblparens.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://tldp.org/LDP/abs/html/dblparens.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;bash&lt;/code&gt; 中的 &lt;code&gt;test&lt;/code&gt; 确实是一个让初学者迷糊的概念，但是理解了之后，发现它并没有深奥的地方。&lt;br&gt;
    
    </summary>
    
    
      <category term="bash" scheme="http://jiangyuan.me/tags/bash/"/>
    
      <category term="mac" scheme="http://jiangyuan.me/tags/mac/"/>
    
      <category term="shell" scheme="http://jiangyuan.me/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>bash 的字符串和数组</title>
    <link href="http://jiangyuan.me/2016/03/29/bash-string-and-array/"/>
    <id>http://jiangyuan.me/2016/03/29/bash-string-and-array/</id>
    <published>2016-03-29T07:15:54.000Z</published>
    <updated>2016-03-29T07:12:06.000Z</updated>
    
    <content type="html">&lt;p&gt;回顾下自己接触过的编程语言，&lt;strong&gt;字符串&lt;/strong&gt;和&lt;strong&gt;数组&lt;/strong&gt;真是基础中的基础。也因此，在接触一门新的语言的时候，非常有必要去熟悉该语言的&lt;strong&gt;字符串&lt;/strong&gt;和&lt;strong&gt;数组&lt;/strong&gt;。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;字符串&quot;&gt;&lt;a href=&quot;#字符串&quot; class=&quot;headerlink&quot; title=&quot;字符串&quot;&gt;&lt;/a&gt;字符串&lt;/h2&gt;&lt;h3 id=&quot;声明和赋值&quot;&gt;&lt;a href=&quot;#声明和赋值&quot; class=&quot;headerlink&quot; title=&quot;声明和赋值&quot;&gt;&lt;/a&gt;声明和赋值&lt;/h3&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;name=&lt;span class=&quot;string&quot;&gt;&#39;jero&#39;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 单引号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hellojero=&lt;span class=&quot;string&quot;&gt;&quot;hello, &lt;span class=&quot;variable&quot;&gt;$name&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 双引号，可以引用变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再看看复杂点的操作。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;表达式&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;${var}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;变量 &lt;code&gt;var&lt;/code&gt; 的值，与 &lt;code&gt;$var&lt;/code&gt; 相同&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;${var-DEFAULT}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;如果 &lt;code&gt;var&lt;/code&gt; 没有被声明，那么就以 &lt;code&gt;$DEFAULT&lt;/code&gt; 作为其值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;${var:-DEFAULT}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;如果 &lt;code&gt;var&lt;/code&gt; 没有被声明, 或者其值为空, 那么就以   &lt;code&gt;$DEFAULT&lt;/code&gt; 作为其值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;${var=DEFAULT}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;如果 &lt;code&gt;var&lt;/code&gt; 没有被声明，那么就以 &lt;code&gt;$DEFAULT&lt;/code&gt; 作为其值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;${var:=DEFAULT}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;如果 &lt;code&gt;var&lt;/code&gt; 没有被声明, 或者其值为空, 那么就以   &lt;code&gt;$DEFAULT&lt;/code&gt; 作为其值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;${var+OTHER}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;如果 &lt;code&gt;var&lt;/code&gt; 声明了, 那么其值就是 &lt;code&gt;$OTHER&lt;/code&gt;, 否则就为 &lt;code&gt;null&lt;/code&gt; 字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;${var:+OTHER}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;如果 &lt;code&gt;var&lt;/code&gt; 被设置了, 那么其值就是 &lt;code&gt;$OTHER&lt;/code&gt;, 否则就为 &lt;code&gt;null&lt;/code&gt; 字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;${var?ERR_MSG}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;如果 &lt;code&gt;var&lt;/code&gt; 没被声明, 那么就打印 &lt;code&gt;$ERR_MSG&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;${var:?ERR_MSG}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;如果 &lt;code&gt;var&lt;/code&gt; 没被设置, 那么就打印 &lt;code&gt;$ERR_MSG&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;${!varprefix*}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;匹配之前所有以 &lt;code&gt;varprefix&lt;/code&gt; 开头进行声明的变量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;${!varprefix@}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;同上&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;var-DEFAULT-vs-var-DEFAULT&quot;&gt;&lt;a href=&quot;#var-DEFAULT-vs-var-DEFAULT&quot; class=&quot;headerlink&quot; title=&quot;${var:-DEFAULT} vs ${var:=DEFAULT}&quot;&gt;&lt;/a&gt;&lt;code&gt;${var:-DEFAULT}&lt;/code&gt; vs &lt;code&gt;${var:=DEFAULT}&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;这两个真的非常像，那么它们的区别是什么呢？&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;foo1=&lt;span class=&quot;variable&quot;&gt;$&amp;#123;bar1:-&#39;abc&#39;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$foo1&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;# abc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$bar1&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;# 空&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo2=&lt;span class=&quot;variable&quot;&gt;$&amp;#123;bar2:=&#39;abc&#39;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$foo2&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;# abc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$bar2&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;# abc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 区别很明显了，bar1 没有赋值， bar2 被赋值了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;操作&quot;&gt;&lt;a href=&quot;#操作&quot; class=&quot;headerlink&quot; title=&quot;操作&quot;&gt;&lt;/a&gt;操作&lt;/h3&gt;&lt;h4 id=&quot;长度&quot;&gt;&lt;a href=&quot;#长度&quot; class=&quot;headerlink&quot; title=&quot;长度&quot;&gt;&lt;/a&gt;长度&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;#name&amp;#125;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 有些资料上会有如下方式：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; `expr length &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$name&lt;/span&gt;&quot;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 在 mac(10.11.4) 上，会 `syntax error`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 这是因为 GUN 的 expr 和 BSD 的 expr 有很大的不同，用的时候一定要慎重&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 具体可参考 https://discussions.apple.com/thread/923299&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 可做如下尝试：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; `expr &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$name&lt;/span&gt;&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&#39;.*&#39;&lt;/span&gt;` &lt;span class=&quot;comment&quot;&gt;# 4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;拼接&quot;&gt;&lt;a href=&quot;#拼接&quot; class=&quot;headerlink&quot; title=&quot;拼接&quot;&gt;&lt;/a&gt;拼接&lt;/h4&gt;&lt;p&gt;拼接就比较灵活了，但不外乎如下几种方式。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hei=&lt;span class=&quot;string&quot;&gt;&quot;hei, &lt;span class=&quot;variable&quot;&gt;$name&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 利用双引号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;family=&lt;span class=&quot;string&quot;&gt;&#39;jiang&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$hei&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$family&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# hei, jero jiang&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$hei&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$family&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 当然也可以不用双引号，但是可读性降低了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;子字符串&quot;&gt;&lt;a href=&quot;#子字符串&quot; class=&quot;headerlink&quot; title=&quot;子字符串&quot;&gt;&lt;/a&gt;子字符串&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;表达式&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;${string:position}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;在 &lt;code&gt;$string&lt;/code&gt; 中, 从位置 &lt;code&gt;$position&lt;/code&gt; 开始提取子串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;${string:position:length}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;在 &lt;code&gt;$string&lt;/code&gt; 中, 从位置 &lt;code&gt;$position&lt;/code&gt; 开始提取长度为 &lt;code&gt;$length&lt;/code&gt; 的子串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;${string#substring}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;从变量 &lt;code&gt;$string&lt;/code&gt; 的开头, 删除最短匹配 &lt;code&gt;$substring&lt;/code&gt; 的子串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;${string##substring}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;从变量 &lt;code&gt;$string&lt;/code&gt; 的开头, 删除最长匹配 &lt;code&gt;$substring&lt;/code&gt; 的子串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;${string%substring}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;从变量 &lt;code&gt;$string&lt;/code&gt; 的结尾, 删除最短匹配 &lt;code&gt;$substring&lt;/code&gt; 的子串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;${string%%substring}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;从变量 &lt;code&gt;$string&lt;/code&gt; 的结尾, 删除最长匹配 &lt;code&gt;$substring&lt;/code&gt; 的子串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;${string/substring/replacement}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;使用 &lt;code&gt;$replacement&lt;/code&gt;, 来代替第一个匹配的 &lt;code&gt;$substring&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;${string//substring/replacement}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;使用 &lt;code&gt;$replacement&lt;/code&gt;, 代替所有匹配的 &lt;code&gt;$substring&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;${string/#substring/replacement}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;如果 &lt;code&gt;$string&lt;/code&gt; 的前面数位匹配 &lt;code&gt;$substring&lt;/code&gt;, 那么就用 &lt;code&gt;$replacement&lt;/code&gt; 来代替匹配到的 &lt;code&gt;$substring&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;${string/%substring/replacement}&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;如果 &lt;code&gt;$string&lt;/code&gt; 的后面数位匹配 &lt;code&gt;$substring&lt;/code&gt;, 那么就用 &lt;code&gt;$replacement&lt;/code&gt; 来代替匹配到的 &lt;code&gt;$substring&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;&lt;code&gt;substring&lt;/code&gt; 可以是正则。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;下面来个实例。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;long=&lt;span class=&quot;string&quot;&gt;&#39;123456789abcdefg123456789abcdefg123456789&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;#long&amp;#125;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 41，长度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;long:3&amp;#125;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 456789abcdefg123456789abcdefg123456789，从第三位开始截取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;long:3:6&amp;#125;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 456789，从第三位开始截取长度为 6 的子串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;long#*a&amp;#125;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# bcdefg123456789abcdefg123456789，从头删除最短匹配&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;long##*a&amp;#125;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# bcdefg123456789，从头删除最长匹配&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;long%a*&amp;#125;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 123456789abcdefg123456789，从尾开始删除最短匹配&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;long%%a*&amp;#125;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 123456789，从尾开始删除最长匹配&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;long/abc/ABC&amp;#125;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 123456789ABCdefg123456789abcdefg123456789，替换首次出现的子字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;long//abc/ABC&amp;#125;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 123456789ABCdefg123456789ABCdefg123456789，全局替换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;long/#123/ABC&amp;#125;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# ABC456789abcdefg123456789abcdefg123456789，字符串的前面数位和 123 匹配，替换之&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;long/%789/ABC&amp;#125;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 123456789abcdefg123456789abcdefg123456ABC，字符串的后面数位和 789 匹配，替换之&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;数组&quot;&gt;&lt;a href=&quot;#数组&quot; class=&quot;headerlink&quot; title=&quot;数组&quot;&gt;&lt;/a&gt;数组&lt;/h2&gt;&lt;p&gt;&lt;code&gt;bash&lt;/code&gt; 支持一维数组，下标从 &lt;code&gt;0&lt;/code&gt; 开始。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-a&lt;/span&gt; array_name &lt;span class=&quot;comment&quot;&gt;# 声明一个数组，但并没人这么用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arr1=(value0 value1 value2 value3 value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 或者&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arr1=(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	value0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	value1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	value2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	value3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	value4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;) &lt;span class=&quot;comment&quot;&gt;# ！！！元素之间没有逗号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 数组元素不用连续&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arr2[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]=v0,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arr2[&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;]=v100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 取数组元素，必须用大括号模式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;arr1[3]&amp;#125;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# value2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;arr2[100]&amp;#125;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# v100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 使用 `@` 或 `*` 可以获取数组中的所有元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;arr1[*]&amp;#125;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# value0 value1 value2 value3 value4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;arr2[@]&amp;#125;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# v1 v100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 获取数组的长度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;#arr1[*]&amp;#125;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;#arr2[@]&amp;#125;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考文章&quot;&gt;&lt;a href=&quot;#参考文章&quot; class=&quot;headerlink&quot; title=&quot;参考文章&quot;&gt;&lt;/a&gt;参考文章&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://tldp.org/LDP/abs/html/string-manipulation.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://tldp.org/LDP/abs/html/string-manipulation.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_10_02.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_10_02.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tldp.org/LDP/abs/html/arrays.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://tldp.org/LDP/abs/html/arrays.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://c.biancheng.net/cpp/view/7001.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Shell字符串&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://c.biancheng.net/cpp/view/7002.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Shell数组：shell数组的定义、数组长度&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://lovelace.blog.51cto.com/1028430/1211141&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bash shell学习之变量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/chengmo/archive/2010/10/02/1841355.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/chengmo/archive/2010/10/02/1841355.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/17404696/what-is-the-difference-between-var-var-word-and-var-var-word&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://stackoverflow.com/questions/17404696/what-is-the-difference-between-var-var-word-and-var-var-word&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://discussions.apple.com/thread/923299&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://discussions.apple.com/thread/923299&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/chengmo/archive/2010/10/02/1841355.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/chengmo/archive/2010/10/02/1841355.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;回顾下自己接触过的编程语言，&lt;strong&gt;字符串&lt;/strong&gt;和&lt;strong&gt;数组&lt;/strong&gt;真是基础中的基础。也因此，在接触一门新的语言的时候，非常有必要去熟悉该语言的&lt;strong&gt;字符串&lt;/strong&gt;和&lt;strong&gt;数组&lt;/strong&gt;。&lt;br&gt;
    
    </summary>
    
    
      <category term="bash" scheme="http://jiangyuan.me/tags/bash/"/>
    
      <category term="mac" scheme="http://jiangyuan.me/tags/mac/"/>
    
      <category term="shell" scheme="http://jiangyuan.me/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>bash 的变量和参数</title>
    <link href="http://jiangyuan.me/2016/01/27/bash-variables-and-parameters/"/>
    <id>http://jiangyuan.me/2016/01/27/bash-variables-and-parameters/</id>
    <published>2016-01-27T07:15:54.000Z</published>
    <updated>2016-01-27T14:02:38.000Z</updated>
    
    <content type="html">&lt;p&gt;对一个编程脚本来说，最最基础的当然是变量。&lt;/p&gt;
&lt;p&gt;对大多数开发者来说，变量也是最不值得的大说特说的。&lt;/p&gt;
&lt;p&gt;但 &lt;code&gt;bash&lt;/code&gt; 里的变量有一些特别的地方值得说说，谨防跌坑。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;基本行为&quot;&gt;&lt;a href=&quot;#基本行为&quot; class=&quot;headerlink&quot; title=&quot;基本行为&quot;&gt;&lt;/a&gt;基本行为&lt;/h2&gt;&lt;h3 id=&quot;赋值&quot;&gt;&lt;a href=&quot;#赋值&quot; class=&quot;headerlink&quot; title=&quot;赋值&quot;&gt;&lt;/a&gt;赋值&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 赋值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;keng = &lt;span class=&quot;string&quot;&gt;&#39;坑&#39;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 等号两边空格？&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;variableName=&lt;span class=&quot;string&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a=&lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b= &lt;span class=&quot;comment&quot;&gt;# 空&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$a&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$b&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;# b 和下面根本没出现过的 c 的区别？&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$c&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;等号两边空格？&quot;&gt;&lt;a href=&quot;#等号两边空格？&quot; class=&quot;headerlink&quot; title=&quot;等号两边空格？&quot;&gt;&lt;/a&gt;等号两边空格？&lt;/h4&gt;&lt;p&gt;我的 &lt;code&gt;bash&lt;/code&gt; 生涯第一坑。&lt;code&gt;bash&lt;/code&gt; 中，赋值 &lt;code&gt;=&lt;/code&gt; 两边&lt;strong&gt;不能有空格&lt;/strong&gt;。&lt;br&gt;有空格又会怎样？&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;VARIABLE =value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 脚本将会尝试运行带参数 &quot;=value&quot; 的 &quot;VARIABLE &quot; 命令。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;VARIABLE= value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 脚本将会尝试运行 &quot;value&quot; 命令，同时设置环境变量 &quot;VARIABLE&quot; 为 &quot;&quot;。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;上面-b-和-c-的区别？&quot;&gt;&lt;a href=&quot;#上面-b-和-c-的区别？&quot; class=&quot;headerlink&quot; title=&quot;上面 $b 和 $c 的区别？&quot;&gt;&lt;/a&gt;上面 &lt;code&gt;$b&lt;/code&gt; 和 &lt;code&gt;$c&lt;/code&gt; 的区别？&lt;/h4&gt;&lt;p&gt;实际应用的角度来说，基本没区别，都是空值。技术的角度加以区别的话，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ -z &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$b&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;bxxx&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;xxx&quot;&lt;/span&gt; ] &lt;span class=&quot;comment&quot;&gt;# 这里的判断会有单独的文章介绍&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;b is set but empty&#39;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;# 设置但为空&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;b is not set&#39;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;# 没设置，如 c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;变量中的空格&quot;&gt;&lt;a href=&quot;#变量中的空格&quot; class=&quot;headerlink&quot; title=&quot;变量中的空格&quot;&gt;&lt;/a&gt;变量中的空格&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;e=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 报错，变量中间当然不能有空格&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e=&lt;span class=&quot;string&quot;&gt;&#39;1 2 3&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f=&lt;span class=&quot;string&quot;&gt;&#39;1  2   3&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$e&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;# 1 2 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$f&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;# ?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$f&lt;/span&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;# ?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上述最后两行的结果？&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$f&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;# &#39;1 2 3&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$f&lt;/span&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;# &#39;1  2   3&#39;，空格会保留。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;如果在变量中出现空格，那么必须进行引用。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;命令替换&quot;&gt;&lt;a href=&quot;#命令替换&quot; class=&quot;headerlink&quot; title=&quot;命令替换&quot;&gt;&lt;/a&gt;命令替换&lt;/h4&gt;&lt;p&gt;命令替换就是将一个命令的结果赋值给变量。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;g=`&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; hello`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;h=$(&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; hello) &lt;span class=&quot;comment&quot;&gt;# 这两种语法等价&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i=`ls &lt;span class=&quot;operator&quot;&gt;-l&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$i&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$i&lt;/span&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;# 和上一行的不同？想想上面的空格&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;替换&quot;&gt;&lt;a href=&quot;#替换&quot; class=&quot;headerlink&quot; title=&quot;替换&quot;&gt;&lt;/a&gt;替换&lt;/h3&gt;&lt;p&gt;bash 里面引用一个变量的过程称为 Variable Substitution，字面意思即为变量替换。和大多数的语言叫法不同，但实际用起来没啥区别。&lt;/p&gt;
&lt;p&gt;其实上面的赋值就有不少替换了，这里我们更进一步。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 替换，必须有美元符号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;variableName=&lt;span class=&quot;string&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a=&lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$variableName&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;# value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$a&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;# 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;a&amp;#125;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 1   实际上 $variable 是 $&amp;#123;variable&amp;#125; 的简化形式。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$b&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; foo &lt;span class=&quot;variable&quot;&gt;$a&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;foo $a&#39;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;# ? 单引号，强引用，所有字符字面量显示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;foo &lt;span class=&quot;variable&quot;&gt;$a&lt;/span&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;# ? 双引号，弱引用，变量会被替换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;foo \$a&quot;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;# ? 转义，变量不会被替换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;变量类型&quot;&gt;&lt;a href=&quot;#变量类型&quot; class=&quot;headerlink&quot; title=&quot;变量类型&quot;&gt;&lt;/a&gt;变量类型&lt;/h2&gt;&lt;p&gt; 这里当然不是说字符串、整形什么的，其实 &lt;code&gt;bash&lt;/code&gt; 中的变量都可以理解为字符串。&lt;br&gt; &lt;code&gt;bash&lt;/code&gt; 中有四种类型的变量，它们是环境变量、本地变量、位置变量和特殊变量。&lt;/p&gt;
&lt;h3 id=&quot;环境变量&quot;&gt;&lt;a href=&quot;#环境变量&quot; class=&quot;headerlink&quot; title=&quot;环境变量&quot;&gt;&lt;/a&gt;环境变量&lt;/h3&gt;&lt;p&gt;参看维基百科的&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;环境变量&lt;/a&gt;，这里不做赘述。&lt;/p&gt;
&lt;h3 id=&quot;本地变量&quot;&gt;&lt;a href=&quot;#本地变量&quot; class=&quot;headerlink&quot; title=&quot;本地变量&quot;&gt;&lt;/a&gt;本地变量&lt;/h3&gt;&lt;p&gt;我们上面的那么多的例子其实就是本地变量。&lt;br&gt;本地变量的作用域为当前脚本。有一个子类，局部变量，作用域是当前代码块，比如函数中的变量。&lt;/p&gt;
&lt;h3 id=&quot;位置变量&quot;&gt;&lt;a href=&quot;#位置变量&quot; class=&quot;headerlink&quot; title=&quot;位置变量&quot;&gt;&lt;/a&gt;位置变量&lt;/h3&gt;&lt;p&gt;其实就是我们说的参数了，也是特殊变量的一种，因为常用，单独拿出。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$n&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# n 为自然数，1、2、3……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./test.sh foo bar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;# foo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$2&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;# bar&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;大于 &lt;code&gt;$9&lt;/code&gt; 的参数必须被放在大括号中&lt;/strong&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;10&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;特殊变量&quot;&gt;&lt;a href=&quot;#特殊变量&quot; class=&quot;headerlink&quot; title=&quot;特殊变量&quot;&gt;&lt;/a&gt;特殊变量&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;变量&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;$$&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;表示当前 Shell 进程的 ID ，即 pid , &lt;code&gt;echo $$&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;$n&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;上述位置变量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;$#&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;传递给脚本或函数的参数个数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;$*&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;传递给脚本或函数的所有参数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;$@&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;传递给脚本或函数的所有参数 &lt;code&gt;?&lt;/code&gt; &lt;em&gt;见下方&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;$？&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;上个命令的退出状态，或函数的返回值 &lt;code&gt;?&lt;/code&gt; &lt;em&gt;见下方&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;$0&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;当前脚本的文件名&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;和-的区别&quot;&gt;&lt;a href=&quot;#和-的区别&quot; class=&quot;headerlink&quot; title=&quot;$* 和 $@ 的区别&quot;&gt;&lt;/a&gt;&lt;code&gt;$*&lt;/code&gt; 和 &lt;code&gt;$@&lt;/code&gt; 的区别&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; $*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$@&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 没有双引号，两者一样，都以&quot;$1&quot; &quot;$2&quot; … &quot;$n&quot; 的形式输出所有参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;$*&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 会将所有的参数作为一个整体，以&quot;$1 $2 … $n&quot;的形式输出所有参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$@&lt;/span&gt;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 会将各个参数分开，以&quot;$1&quot; &quot;$2&quot; … &quot;$n&quot; 的形式输出所有参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;退出与退出状态&quot;&gt;&lt;a href=&quot;#退出与退出状态&quot; class=&quot;headerlink&quot; title=&quot;退出与退出状态&quot;&gt;&lt;/a&gt;退出与退出状态&lt;/h4&gt;&lt;p&gt;请查看&lt;a href=&quot;https://imcmy.gitbooks.io/advanced-bash-scripting-guide-in-chinese/content/source/part2/06_exit_and_exit_status.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;退出与退出状态&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考文章&quot;&gt;&lt;a href=&quot;#参考文章&quot; class=&quot;headerlink&quot; title=&quot;参考文章&quot;&gt;&lt;/a&gt;参考文章&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://lovelace.blog.51cto.com/1028430/1211141&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bash shell学习之变量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://c.biancheng.net/cpp/view/6999.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Shell变量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/228544/how-to-tell-if-a-string-is-not-defined-in-a-bash-shell-script&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to tell if a string is not defined in a bash shell script?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tldp.org/LDP/abs/html/variables.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Introduction to Variables and Parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://imcmy.gitbooks.io/advanced-bash-scripting-guide-in-chinese/content/source/part2/04_introduction_to_variables_and_parameters.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;变量与参数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;对一个编程脚本来说，最最基础的当然是变量。&lt;/p&gt;
&lt;p&gt;对大多数开发者来说，变量也是最不值得的大说特说的。&lt;/p&gt;
&lt;p&gt;但 &lt;code&gt;bash&lt;/code&gt; 里的变量有一些特别的地方值得说说，谨防跌坑。&lt;br&gt;
    
    </summary>
    
    
      <category term="bash" scheme="http://jiangyuan.me/tags/bash/"/>
    
      <category term="mac" scheme="http://jiangyuan.me/tags/mac/"/>
    
      <category term="shell" scheme="http://jiangyuan.me/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>bash 初探</title>
    <link href="http://jiangyuan.me/2015/12/31/bash-the-beginning/"/>
    <id>http://jiangyuan.me/2015/12/31/bash-the-beginning/</id>
    <published>2015-12-31T15:21:54.000Z</published>
    <updated>2016-01-27T13:17:39.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;shell-的含义&quot;&gt;&lt;a href=&quot;#shell-的含义&quot; class=&quot;headerlink&quot; title=&quot;shell 的含义&quot;&gt;&lt;/a&gt;shell 的含义&lt;/h2&gt;&lt;p&gt;&lt;code&gt;shell&lt;/code&gt; ，英文的含义是“壳”，在计算机科学中，是指“为用户提供用户界面”的软件，通常指的是命令行界面的解析器。&lt;/p&gt;
&lt;p&gt;一般意义上，这个词指操作系统中提供访问内核所提供之服务的程序，因此除了 &lt;code&gt;CLI&lt;/code&gt;，shell 也包含 GUI 的概念，&lt;code&gt;Windows Explorer&lt;/code&gt; 是一个典型的图形界面Shell。&lt;/p&gt;
&lt;p&gt;当然，本文只关注 &lt;code&gt;CLI&lt;/code&gt; 。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mac&lt;/code&gt; 源自 &lt;code&gt;unix&lt;/code&gt; 系统，所以其 &lt;code&gt;shell&lt;/code&gt; 和 &lt;code&gt;unix&lt;/code&gt; 一脉相承。&lt;/p&gt;
&lt;h3 id=&quot;shell-脚本&quot;&gt;&lt;a href=&quot;#shell-脚本&quot; class=&quot;headerlink&quot; title=&quot;shell 脚本&quot;&gt;&lt;/a&gt;shell 脚本&lt;/h3&gt;&lt;p&gt;&lt;code&gt;shell&lt;/code&gt; 本身的概念其实已经关注的很少，我们的最原始的印象，&lt;code&gt;shell&lt;/code&gt; 是一门脚本语言，可用于编程。&lt;/p&gt;
&lt;p&gt;“shell 脚本”，又称 Shell 命令稿、程序化脚本，文本文件，由一连串的 &lt;code&gt;shell&lt;/code&gt; 命令组成，经由 &lt;code&gt;Unix Shell&lt;/code&gt;执行，可以进行系统管理、文件操作等。&lt;/p&gt;
&lt;h2 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h2&gt;&lt;p&gt;当前主流的操作系统都支持 &lt;code&gt;shell&lt;/code&gt; 编程，本系列所探究的 &lt;code&gt;shell&lt;/code&gt; 编程是指 Linux 下的 &lt;code&gt;shell&lt;/code&gt;，讲的基本都是 POSIX 标准下的功能，所以，也适用于 Unix及 BSD（如Mac OS）。&lt;/p&gt;
&lt;h3 id=&quot;OS&quot;&gt;&lt;a href=&quot;#OS&quot; class=&quot;headerlink&quot; title=&quot;OS&quot;&gt;&lt;/a&gt;OS&lt;/h3&gt;&lt;h4 id=&quot;Linux&quot;&gt;&lt;a href=&quot;#Linux&quot; class=&quot;headerlink&quot; title=&quot;Linux&quot;&gt;&lt;/a&gt;Linux&lt;/h4&gt;&lt;p&gt;Linux 默认安装就带了 shell 解释器。&lt;/p&gt;
&lt;h4 id=&quot;Mac-OS&quot;&gt;&lt;a href=&quot;#Mac-OS&quot; class=&quot;headerlink&quot; title=&quot;Mac OS&quot;&gt;&lt;/a&gt;Mac OS&lt;/h4&gt;&lt;p&gt;Mac OS 不仅带了 sh、bash 这两个最基础的解释器，还内置了 ksh、csh、zsh 等不常用的解释器。&lt;/p&gt;
&lt;p&gt;我个人倒是推荐 &lt;code&gt;zsh&lt;/code&gt; ，&lt;code&gt;zsh&lt;/code&gt; 会专门来篇文章介绍。&lt;/p&gt;
&lt;h4 id=&quot;Windows&quot;&gt;&lt;a href=&quot;#Windows&quot; class=&quot;headerlink&quot; title=&quot;Windows&quot;&gt;&lt;/a&gt;Windows&lt;/h4&gt;&lt;p&gt;windows 出厂时没有内置 shell 解释器……只能装模拟器，比如 &lt;code&gt;cygwin&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;当然 windows 上的 &lt;code&gt;PowerShell&lt;/code&gt; 也是不俗的脚本，这个也会专门来个系列介绍。&lt;/p&gt;
&lt;h3 id=&quot;脚本解释器&quot;&gt;&lt;a href=&quot;#脚本解释器&quot; class=&quot;headerlink&quot; title=&quot;脚本解释器&quot;&gt;&lt;/a&gt;脚本解释器&lt;/h3&gt;&lt;p&gt;当然，脚本解释器五花八门，下面就挑选些典型的说下。&lt;/p&gt;
&lt;h4 id=&quot;sh&quot;&gt;&lt;a href=&quot;#sh&quot; class=&quot;headerlink&quot; title=&quot;sh&quot;&gt;&lt;/a&gt;sh&lt;/h4&gt;&lt;p&gt;即 Bourne shell，POSIX（Portable Operating System Interface）标准的 shell 解释器，它的二进制文件路径通常是 &lt;code&gt;/bin/sh&lt;/code&gt;，由 Bell Labs 开发。&lt;/p&gt;
&lt;h4 id=&quot;bash&quot;&gt;&lt;a href=&quot;#bash&quot; class=&quot;headerlink&quot; title=&quot;bash&quot;&gt;&lt;/a&gt;bash&lt;/h4&gt;&lt;p&gt;Bash 是 Bourne shell 的替代品，属 GNU Project，二进制文件路径通常是 &lt;code&gt;/bin/bash&lt;/code&gt;。业界通常混用 &lt;code&gt;bash&lt;/code&gt;、&lt;code&gt;sh&lt;/code&gt;、和 &lt;code&gt;shell&lt;/code&gt;，比如你会经常在招聘运维工程师的文案中见到：熟悉 Linux Bash 编程，精通 Shell 编程。&lt;/p&gt;
&lt;h4 id=&quot;zsh&quot;&gt;&lt;a href=&quot;#zsh&quot; class=&quot;headerlink&quot; title=&quot;zsh&quot;&gt;&lt;/a&gt;zsh&lt;/h4&gt;&lt;p&gt;Z Shell(Zsh) 以认为是一种 Bourne shell 的扩展，带有数量庞大的改进，包括一些bash、ksh、tcsh的功能。&lt;/p&gt;
&lt;h4 id=&quot;高级编程语言&quot;&gt;&lt;a href=&quot;#高级编程语言&quot; class=&quot;headerlink&quot; title=&quot;高级编程语言&quot;&gt;&lt;/a&gt;高级编程语言&lt;/h4&gt;&lt;p&gt;理论上讲，只要一门语言提供了解释器（而不仅是编译器），这门语言就可以胜任脚本编程，常见的解释型语言都是可以用作脚本编程的，如：Perl、Tcl、Python、PHP、Ruby、Nodejs。&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/qinjx/30min_guides/blob/master/shell.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Shell脚本编程30分钟入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%AE%BC%E5%B1%A4&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;shell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/Shell%E8%84%9A%E6%9C%AC&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Shell脚本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;Z%20shell&quot;&gt;Z shell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;shell-的含义&quot;&gt;&lt;a href=&quot;#shell-的含义&quot; class=&quot;headerlink&quot; title=&quot;shell 的含义&quot;&gt;&lt;/a&gt;shell 的含义&lt;/h2&gt;&lt;p&gt;&lt;code&gt;shell&lt;/code&gt; ，英文的含义是“壳”，在计算机科学中，是指“为用户提供用户界面”的软件，通常指的是命令行界面的解析器。&lt;/p&gt;
&lt;p&gt;一般意义上，这个词指操作系统中提供访问内核所提供之服务的程序，因此除了 &lt;code&gt;CLI&lt;/code&gt;，shell 也包含 GUI 的概念，&lt;code&gt;Windows Explorer&lt;/code&gt; 是一个典型的图形界面Shell。&lt;/p&gt;
&lt;p&gt;当然，本文只关注 &lt;code&gt;CLI&lt;/code&gt; 。&lt;br&gt;
    
    </summary>
    
    
      <category term="bash" scheme="http://jiangyuan.me/tags/bash/"/>
    
      <category term="mac" scheme="http://jiangyuan.me/tags/mac/"/>
    
      <category term="shell" scheme="http://jiangyuan.me/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>javascript 的跨域问题</title>
    <link href="http://jiangyuan.me/2013/05/15/crossdomain/"/>
    <id>http://jiangyuan.me/2013/05/15/crossdomain/</id>
    <published>2013-05-15T15:21:54.000Z</published>
    <updated>2016-01-18T08:57:41.000Z</updated>
    
    <content type="html">&lt;p&gt;最近有不少人问到了我跨域问题，也有不少问题是因为跨域引起的，加上我本人对跨域的方法和每种方法背后的机制都不胜了解，&lt;br&gt;所以就有做个笔记的必要了。&lt;/p&gt;
&lt;p&gt;还是那句话，只有亲自敲击了才能理解深刻。&lt;/p&gt;
&lt;p&gt;下面就是 javascript 跨域的几个办法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;document.domain&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;jsonp&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;利用 iframe 和 location.hash&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;windown.name 实现的跨域数据传输&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HTML5 postMessage&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ajax2 中的跨域资源共享 (CORS: cross-orgin resource sharing)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;flash&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;document-domain&quot;&gt;&lt;a href=&quot;#document-domain&quot; class=&quot;headerlink&quot; title=&quot;document.domain&quot;&gt;&lt;/a&gt;document.domain&lt;/h2&gt;&lt;p&gt;修改 document.domain 方法可能是最简单的跨域方法。&lt;/p&gt;
&lt;p&gt;假如有两个页面&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://www.a.com/a.html
http://script.a.com/b.html
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;要做跨域通信，那么就可以在 a.html 页面上加上代码：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.domain = &lt;span class=&quot;string&quot;&gt;&quot;a.com&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;相应的 b 页面上也加上上述代码。&lt;/p&gt;
&lt;p&gt;a.html 部分 html 如下：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;iframe&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://script.a.com/b.html&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;iframe&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面 a 页面是可以顺利的和 b 页面交互的，也就是跨域交互。&lt;/p&gt;
&lt;p&gt;这个方法简单是简单，但是局限很大：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;主域名必须相同，上面两个域名的主域名都是 a.com ，如果主域名不相同，趁早放弃这种方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安全性，b 被攻击， a 也很有可能出现漏洞。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;引入多个 iframe 的时候，代码量大且芜杂，性能直线下降。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;关于-jsonp&quot;&gt;&lt;a href=&quot;#关于-jsonp&quot; class=&quot;headerlink&quot; title=&quot;关于 jsonp&quot;&gt;&lt;/a&gt;关于 jsonp&lt;/h2&gt;&lt;p&gt;参考文章：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/lemontea/archive/2012/12/11/2812268.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jsonp详解&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/lifesinger/lifesinger.github.com/issues/118&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;聊聊 JSONP 的 P&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个年头，似乎不扯几下 jsonp 就显不出自己的水平似得，唉……&lt;/p&gt;
&lt;p&gt;上面两篇文章，第一篇适合入门，第二篇是加深理解。&lt;/p&gt;
&lt;p&gt;jsonp， JSON With Padding。&lt;/p&gt;
&lt;p&gt;基础是 script 标签的跨域能力。&lt;/p&gt;
&lt;p&gt;script 标签加载完成就会执行其中的代码，因此其内容必须合乎 javascript 语法，如下&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    id: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;代码肯定要跪掉，因此必须这样：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;callback(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    id: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;callback 可以在发送请求时放在 url 后传过去，当然，当前页面也必须有 callback 函数。&lt;/p&gt;
&lt;p&gt;OK，这就是 jsonp 。&lt;/p&gt;
&lt;h2 id=&quot;利用-iframe-和-location-hash&quot;&gt;&lt;a href=&quot;#利用-iframe-和-location-hash&quot; class=&quot;headerlink&quot; title=&quot;利用 iframe 和 location.hash&quot;&gt;&lt;/a&gt;利用 iframe 和 location.hash&lt;/h2&gt;&lt;p&gt;就我个人而言，这个方法实在是有些蛋疼，但也不失为解决跨域的方法。&lt;/p&gt;
&lt;p&gt;需求如下：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a.com 下 有页面 a.html ，主页面，需要和&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b.com 下 页面 b.html 通信&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;先说说 location.hash ，这段 url&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a.html#data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;中的 #data 就是 location.hash 。&lt;/p&gt;
&lt;p&gt;经常使用锚点的同学应该很熟悉，这个东东可以将页面定位到 id 为 data 的元素位置。&lt;/p&gt;
&lt;p&gt;除此之外，改变 hash 会改变浏览器的历史记录但是不刷新或者跳转页面，并且，在高级浏览器（IE8+）中你可以通过&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onhashchange&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;事件来监听这个变化，当然，如果你想兼容所有浏览器(IE6+)又懒得自己动手，&lt;br&gt;可以参考 &lt;a href=&quot;http://benalman.com/projects/jquery-hashchange-plugin/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jQuery hashchange event&lt;/a&gt; 。&lt;br&gt;利用这个事件，可以来做 &lt;a href=&quot;http://www.impressivewebs.com/deep-linking-javascript-ajax/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;deeplink&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;当然，我们这里是要做跨域，差点跑题了。&lt;/p&gt;
&lt;p&gt;上面的需求可以概括为， a.com 下的 a.html 想跨域获取 b.com 下的 b.html 页面上的数据。&lt;/p&gt;
&lt;p&gt;大体思路：&lt;/p&gt;
&lt;p&gt;a.html 中创建 iframe 指向 b.html 并利用 hash 传递数据&lt;/p&gt;
&lt;p&gt;b.html 拿到参数，修改 a.html 页面的 hash 来传递数据&lt;/p&gt;
&lt;p&gt;a.html 通过 onhashchange 事件监听自身的 hash 变化，获取数据&lt;/p&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;p&gt;首先在 a.html 页面中创建一个 iframe ，并指向 b.html ，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// &amp;#35831;&amp;#27714; b.html&amp;#10;function request() &amp;#123;&amp;#10;    var iframe = document.createElement( &amp;#34;iframe&amp;#34; )&amp;#10;    iframe.style.display = &amp;#34;none&amp;#34;;&amp;#10;    iframe.src = &amp;#34;http://b.com/b.html#data&amp;#34;;    // &amp;#27880;&amp;#24847; hash&amp;#10;    document.body.appendChild( iframe );&amp;#10;&amp;#125;&amp;#10;&amp;#10;&amp;#10;// &amp;#30417;&amp;#21548; hash&amp;#10;window.onhashchange = function() &amp;#123;&amp;#10;    var data = location.hash ? location.hash.substring(1) : &amp;#34;&amp;#34;;&amp;#10;    console.log( &amp;#34;Now the data is &amp;#34; + data ) ;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;b.html 页面中的代码&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//模拟一个简单的参数处理操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt;( location.hash )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;#data&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        callBack();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;#data2&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//do something……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;callBack&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        parent.location.hash = &lt;span class=&quot;string&quot;&gt;&quot;somedata&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// ie、chrome 的安全机制（不同域）无法修改 parent.location.hash，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 所以要利用一个中间的 a.com 域下的代理 iframe&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; iframe = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement( &lt;span class=&quot;string&quot;&gt;&quot;iframe&quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        iframe.style.display = &lt;span class=&quot;string&quot;&gt;&quot;none&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        iframe.src = &lt;span class=&quot;string&quot;&gt;&quot;http://a.com/a2.html#somedata&quot;&lt;/span&gt;;    &lt;span class=&quot;comment&quot;&gt;// 注意该文件在&quot;a.com&quot;域下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.appendChild( iframe );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在知道我为什么说这种方法蛋痛了吧，第三个页面 (a.com 下的 a2.html) 出现了，其中代码&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// parent.parent 就是 a.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 因为parent.parent和自身属于同一个域，所以可以改变其location.hash的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;parent.parent.location.hash = location.hash.substring(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;跨域是搞定了，但是这个方法的缺陷也很明显：数据直接暴露在了url中，数据容量和类型都有限等……&lt;/p&gt;
&lt;p&gt;整个方法就是这样了，这个方法的出现充分证明了 javascript 跨域实在是，坑爹！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;时间隔的有点久了&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;window-name-跨域&quot;&gt;&lt;a href=&quot;#window-name-跨域&quot; class=&quot;headerlink&quot; title=&quot;window.name 跨域&quot;&gt;&lt;/a&gt;window.name 跨域&lt;/h2&gt;&lt;p&gt;上面的 location.hash 确实问题很多，数据暴露、数据容量小等等，老实说，如果能解决这些问题，还是不错的。&lt;/p&gt;
&lt;p&gt;庆幸的是，有一种方法能有达到上述效果，那就是利用 window.name 。&lt;/p&gt;
&lt;p&gt;这篇文章写得很清楚，&lt;a href=&quot;http://www.planabc.net/2008/09/01/window_name_transport/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用 window.name 解决跨域问题&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;当然，别人写那还是别人的，自己必须要研究一遍啊。&lt;/p&gt;
&lt;p&gt;window.name 的跨域的机制是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;name 值在不同的页面（甚至不同域名）加载后依旧存在，并且可以支持非常长的 name 值（2MB）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;比如在 a 页面设置了 window.name 的值，如果 a 跳转到 b 页面，该 name 值仍旧存在，所以思路也就出来了……&lt;/p&gt;
&lt;p&gt;看我的代码，&lt;a href=&quot;https://github.com/jiangyuan/playjs/tree/master/crossdomain/name&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击&lt;/a&gt;：&lt;/p&gt;
&lt;p&gt;3000.html 是发起请求的页面，希望获取 3001.html 上的数据，那么——&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;3000.html 中放一个 iframe ，指向 3001.html ，并监听 iframe 的 load 事件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3001.html 操作自己的 window.name ，以此传送数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3000.html 当然不能直接访问 3001.html ，所有 3000proxy.html 就有存在的必要。&lt;/p&gt;
&lt;p&gt; 3001.html 第一次加载完成后，使 iframe 跳转到 3000proxy，此时 window.name 仍旧存在，并且 iframe 和其父页面同域，可互相访问，&lt;br&gt; 跨域获取数据完成。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;就是那么简单，这个方法可以说是 loacation.hash 的升级版。&lt;/p&gt;
&lt;p&gt;个人觉得，这个方法可以非常好地解决 javascript 跨域问题，推荐使用。&lt;/p&gt;
&lt;h2 id=&quot;HTML5-postMessage&quot;&gt;&lt;a href=&quot;#HTML5-postMessage&quot; class=&quot;headerlink&quot; title=&quot;HTML5 postMessage&quot;&gt;&lt;/a&gt;HTML5 postMessage&lt;/h2&gt;&lt;p&gt;html5 的 postMessage ，可以在不同的 window 之间、甚至在不同域的 window 之间传递数据。&lt;br&gt;现阶段唯一的问题是浏览器的兼容问题， postMessage 支持 IE8+ 和其他现代浏览器。&lt;/p&gt;
&lt;p&gt;可以参照这个&lt;a href=&quot;https://github.com/jiangyuan/playjs/tree/master/crossdomain/name&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;例子&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;postMessage 的使用语法：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.postMessage( data, targetOrigin)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// window 是目标 window 对象，可以为 iframe 的 contentWindow，或者 window.open 的返回值……&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// data 是要传递的数据，字符串类型，可以将复杂的类型序列化为字符串传送&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// targetOrigin 是目标域，假如设为 `http://a.com` 那么 `http://b.com` 就不会收到传送的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;知道用法，那么思路就很清楚了——&lt;/p&gt;
&lt;p&gt;3000 端口下的页面 &lt;code&gt;postMessage.html&lt;/code&gt; 需要从 3001 端口下的 &lt;code&gt;postMessageTarget.html&lt;/code&gt; 获取数据：&lt;/p&gt;
&lt;p&gt;postMessage.html 代码：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 这个文件运行在端口 3000 下 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 向端口 3001 传递参数，以期获得数据 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;iframe&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://localhost:3001/crossdomain/postMessage/postMessageTarget.html&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;frameborder&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;0&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;iframe&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ifr = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName( &lt;span class=&quot;string&quot;&gt;&quot;iframe&quot;&lt;/span&gt; )[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ifr.addEventListener( &lt;span class=&quot;string&quot;&gt;&quot;load&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 传送参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ifr.contentWindow.postMessage( &lt;span class=&quot;string&quot;&gt;&quot;post data&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt; );        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 获取返回的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.addEventListener( &lt;span class=&quot;string&quot;&gt;&quot;message&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( &lt;span class=&quot;string&quot;&gt;&quot;the response data is: &quot;&lt;/span&gt; + e.data );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;postMessageTarget.html 代码：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 此页面运行在 3001 端口下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 依据传入的 message 返回响应的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.addEventListener( &lt;span class=&quot;string&quot;&gt;&quot;message&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//console.log( &quot;the post data is: &quot; + e.data );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( e.data ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.source.postMessage( &lt;span class=&quot;string&quot;&gt;&quot;response data&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;整个过程很清楚，完全没有多余的步骤。&lt;/p&gt;
&lt;p&gt;唉，跨域问题在 html5 的面前就是如此简单。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近有不少人问到了我跨域问题，也有不少问题是因为跨域引起的，加上我本人对跨域的方法和每种方法背后的机制都不胜了解，&lt;br&gt;所以就有做个笔记的必要了。&lt;/p&gt;
&lt;p&gt;还是那句话，只有亲自敲击了才能理解深刻。&lt;/p&gt;
&lt;p&gt;下面就是 javascript 跨域的几个办法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;document.domain&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;jsonp&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;利用 iframe 和 location.hash&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;windown.name 实现的跨域数据传输&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HTML5 postMessage&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ajax2 中的跨域资源共享 (CORS: cross-orgin resource sharing)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;flash&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="jsonp" scheme="http://jiangyuan.me/tags/jsonp/"/>
    
      <category term="跨域" scheme="http://jiangyuan.me/tags/%E8%B7%A8%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>浏览器缓存</title>
    <link href="http://jiangyuan.me/2013/03/21/browser-cache/"/>
    <id>http://jiangyuan.me/2013/03/21/browser-cache/</id>
    <published>2013-03-21T15:19:45.000Z</published>
    <updated>2016-01-18T08:43:55.000Z</updated>
    
    <content type="html">&lt;p&gt;在读 Yahoo! 前端优化时，有下面这两条规则：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Add an Expires or a Cache-Control Header 设置头文件过期或者静态缓存&lt;/p&gt;
&lt;p&gt;Make JavaScript and CSS External 将JS和CSS外链&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;都是和缓存有关系的。&lt;/p&gt;
&lt;p&gt;在调试 javascript 时，发现有时候刷新没有效果，但是代码明明改了，这也和缓存有关。&lt;/p&gt;
&lt;p&gt;http 状态码是 304 时，表示请求的资源没有变化，这个和缓存&lt;strong&gt;没有&lt;/strong&gt;关系。&lt;/p&gt;
&lt;p&gt;最重要的是，面试的时候碰到了关于&lt;strong&gt;缓存&lt;/strong&gt;的问题，我却不是很了解。&lt;/p&gt;
&lt;p&gt;于是有了这个笔记。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;当然，当我准备动手写时，看到了这篇文章，《&lt;a href=&quot;http://fastfood.sinaapp.com/?p=1092&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;浏览器缓存机制&lt;/a&gt;》，于是就不用写了……&lt;/p&gt;
&lt;p&gt;2013-03-31 不动手写还是理解不深啊。&lt;/p&gt;
&lt;h2 id=&quot;非-http-缓存&quot;&gt;&lt;a href=&quot;#非-http-缓存&quot; class=&quot;headerlink&quot; title=&quot;非 http 缓存&quot;&gt;&lt;/a&gt;非 http 缓存&lt;/h2&gt;&lt;p&gt;浏览器缓存机制，其实主要的还是 http 协议的缓存机制。&lt;/p&gt;
&lt;p&gt;当然也有非 http 协议缓存，如&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;pragma&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;no-cache&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面这行的作用是让页面不缓存，每次都去服务器加载。&lt;/p&gt;
&lt;p&gt;又比如：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;expires&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;30 Apr 2013&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个可以缓存该页面。&lt;/p&gt;
&lt;p&gt;值得说明的是 pragma 这个值在 IE5 之后就没有浏览器支持了，至于 expires …… 可用，但是如果是&lt;br&gt;代理的话，就无效了，代理服务器不处理 html 。&lt;/p&gt;
&lt;h2 id=&quot;http-协议的缓存机制&quot;&gt;&lt;a href=&quot;#http-协议的缓存机制&quot; class=&quot;headerlink&quot; title=&quot;http 协议的缓存机制&quot;&gt;&lt;/a&gt;http 协议的缓存机制&lt;/h2&gt;&lt;p&gt;http 协议的缓存，都是通过响应头，以此来告知浏览器是否缓存、怎么缓存。&lt;/p&gt;
&lt;h3 id=&quot;Expires-策略&quot;&gt;&lt;a href=&quot;#Expires-策略&quot; class=&quot;headerlink&quot; title=&quot;Expires 策略&quot;&gt;&lt;/a&gt;Expires 策略&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Expires=&lt;span class=&quot;string&quot;&gt;&quot;Mon,31 Dec 2001 04:25:57GMT&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;没什么好说的，给 http 响应头加上 Expires 字段。&lt;/p&gt;
&lt;p&gt;不过Expires 是HTTP 1.0的东西，现在默认浏览器均默认使用HTTP 1.1，所以它的作用基本忽略。&lt;/p&gt;
&lt;h3 id=&quot;Cache-Control&quot;&gt;&lt;a href=&quot;#Cache-Control&quot; class=&quot;headerlink&quot; title=&quot;Cache-Control&quot;&gt;&lt;/a&gt;Cache-Control&lt;/h3&gt;&lt;p&gt;相比于 Expires ，Cache-Control 的选择更多，设置更细致，如果同时设置的话，其优先级高于Expires ，其值可以是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Public  指示响应可被任何缓存区缓存&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Private  指示对于单个用户的整个或部分响应消息，不能被共享缓存处理。&lt;br&gt;  这允许服务器仅仅描述当用户的部分响应消息，此响应消息对于其他用户的请求无效。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;no-cache  指示请求或响应消息不能缓存。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;no-store  用于防止重要的信息被无意的发布。在请求消息中发送将使得请求和响应消息都不使用缓存。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;max-age  指示客户机可以接收生存期不大于指定时间（以秒为单位）的响应。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;min-fresh  指示客户机可以接收响应时间小于当前时间加上指定时间的响应。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;max-stale  指示客户机可以接收超出超时期间的响应消息。&lt;br&gt;  如果指定max-stale消息的值，那么客户机可以接收超出超时期指定值之内的响应消息。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Last-Modified-If-Modified-Since&quot;&gt;&lt;a href=&quot;#Last-Modified-If-Modified-Since&quot; class=&quot;headerlink&quot; title=&quot;Last-Modified/If-Modified-Since&quot;&gt;&lt;/a&gt;Last-Modified/If-Modified-Since&lt;/h3&gt;&lt;p&gt;Last-Modified/If-Modified-Since 要配合 Cache-Control 使用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Last-Modified： 表示这个响应资源的最后修改时间。web 服务器响应请求时，告诉浏览器资源的最后修改时间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If-Modified-Since： 当资源过期时（使用Cache-Control标识的max-age），发现资源具有Last-Modified声明，&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;则再次向web服务器请求时带上头 If-Modified-Since，表示请求时间。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  web服务器收到请求后发现有头If-Modified-Since 则与被请求资源的最后修改时间进行比对。&lt;br&gt;  若最后修改时间较新，说明资源又被改动过，则响应整片资源内容（写在响应消息包体内），HTTP 200；&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;若最后修改时间较旧，说明资源无新修改，则响应HTTP 304 (无需包体，节省浏览)，告知浏览器继续使用所保存的cache。
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Etag-If-None-Match&quot;&gt;&lt;a href=&quot;#Etag-If-None-Match&quot; class=&quot;headerlink&quot; title=&quot;Etag/If-None-Match&quot;&gt;&lt;/a&gt;Etag/If-None-Match&lt;/h3&gt;&lt;p&gt;Etag/If-None-Match 也要配合 Catch-Control 来使用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Etag： web服务器响应请求时，告诉浏览器当前资源在服务器的唯一标识（生成规则由服务器决定）。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Apache中，ETag的值，默认是对文件的索引节（INode），大小（Size）和最后修改时间（MTime）进行Hash后得到的。
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If-None-Match：当资源过期时（使用Cache-Control标识的max-age），发现资源具有Etage声明，&lt;br&gt;  则再次向web服务器请求时带上头If-None-Match （Etag的值）。&lt;br&gt;  web服务器收到请求后发现有头If-None-Match 则与被请求资源的相应校验串进行比对，决定返回200或304。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Etag-If-None-Match-与-Last-Modified-If-Modified-Since&quot;&gt;&lt;a href=&quot;#Etag-If-None-Match-与-Last-Modified-If-Modified-Since&quot; class=&quot;headerlink&quot; title=&quot;Etag/If-None-Match 与  Last-Modified/If-Modified-Since&quot;&gt;&lt;/a&gt;Etag/If-None-Match 与  Last-Modified/If-Modified-Since&lt;/h3&gt;&lt;p&gt;使用Last-Modified已经足以让浏览器知道本地的缓存副本是否足够新，为什么还需要Etag（实体标识）呢？&lt;br&gt;HTTP1.1中Etag的出现主要是为了解决几个Last-Modified比较难解决的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Last-Modified标注的最后修改只能精确到秒级，如果某些文件在1秒钟以内，被修改多次的话，它将不能准确标注文件的修改时间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果某些文件会被定期生成，当有时内容并没有任何变化，但Last-Modified却改变了，导致文件没法使用缓存。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;有可能存在服务器没有准确获取文件修改时间，或者与代理服务器时间不一致等情形。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Etag是服务器自动生成或者由开发者生成的对应资源在服务器端的唯一标识符，能够更加准确的控制缓存。&lt;br&gt;Last-Modified与ETag是可以一起使用的，服务器会优先验证ETag，一致的情况下，才会继续比对Last-Modified，最后才决定是否返回304。&lt;/p&gt;
&lt;h3 id=&quot;用户行为与缓存&quot;&gt;&lt;a href=&quot;#用户行为与缓存&quot; class=&quot;headerlink&quot; title=&quot;用户行为与缓存&quot;&gt;&lt;/a&gt;用户行为与缓存&lt;/h3&gt;&lt;table&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;th&gt;用户操作&lt;/th&gt;&lt;br&gt;        &lt;th&gt;Expires/Cache-Control&lt;/th&gt;&lt;br&gt;        &lt;th&gt;Last-Modified/Etag&lt;/th&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;td&gt;地址栏回车&lt;/td&gt;&lt;br&gt;        &lt;td&gt;有效&lt;/td&gt;&lt;br&gt;        &lt;td&gt;有效&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;td&gt;页面链接跳转&lt;/td&gt;&lt;br&gt;        &lt;td&gt;有效&lt;/td&gt;&lt;br&gt;        &lt;td&gt;有效&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;td&gt;新开窗口&lt;/td&gt;&lt;br&gt;        &lt;td&gt;有效&lt;/td&gt;&lt;br&gt;        &lt;td&gt;有效&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;td&gt;前进、后退&lt;/td&gt;&lt;br&gt;        &lt;td&gt;有效&lt;/td&gt;&lt;br&gt;        &lt;td&gt;有效&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;td&gt;F5 刷新&lt;/td&gt;&lt;br&gt;        &lt;td&gt;无效&lt;/td&gt;&lt;br&gt;        &lt;td&gt;有效&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;td&gt;Ctrl+F5 刷新&lt;/td&gt;&lt;br&gt;        &lt;td&gt;无效&lt;/td&gt;&lt;br&gt;        &lt;td&gt;无效&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;&lt;/table&gt;


&lt;hr&gt;
&lt;p&gt;20130508&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/phphuaibei/archive/2011/09/27/2192817.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;浏览器缓存技术&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在读 Yahoo! 前端优化时，有下面这两条规则：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Add an Expires or a Cache-Control Header 设置头文件过期或者静态缓存&lt;/p&gt;
&lt;p&gt;Make JavaScript and CSS External 将JS和CSS外链&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;都是和缓存有关系的。&lt;/p&gt;
&lt;p&gt;在调试 javascript 时，发现有时候刷新没有效果，但是代码明明改了，这也和缓存有关。&lt;/p&gt;
&lt;p&gt;http 状态码是 304 时，表示请求的资源没有变化，这个和缓存&lt;strong&gt;没有&lt;/strong&gt;关系。&lt;/p&gt;
&lt;p&gt;最重要的是，面试的时候碰到了关于&lt;strong&gt;缓存&lt;/strong&gt;的问题，我却不是很了解。&lt;/p&gt;
&lt;p&gt;于是有了这个笔记。&lt;/p&gt;
    
    </summary>
    
    
      <category term="浏览器" scheme="http://jiangyuan.me/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
  </entry>
  
</feed>
